# React Notes #
----------------------------------------------------------------------------------------------------
# Beginner Topics

o Introduction to React and TypeScript [Done]
    - What is React ? What is TypeScript
    - Benefits of using TypeScript in React projects
o Setting Up the Environment [Done]
    - Installing Node.js, npm, and vite
    - Setup React|TypeScript project with vite
    - Overview of project structure
o Fundamentals of TypeScript [Done]
    - Basic types, interfaces, and type aliases
    - Type inference and explicit typing
o React Basics with TypeScript [Done]
    - Understanding JSX and TSX files
    - Creating and using Functional Components with type annotations
    - Defining and validating props using interfaces or types
    - Handling state with the useState hook
o Event Handling and Conditional Rendering [Done]
    - Typing event handlers: onClick, onChange
    - Conditional rendering and list rendering in TypeScript

----------------------------------------------------------------------------------------------------
# Intermediate Topics

o React Hooks in Depth [Done]
    - useEffect: handling side effects with proper typings
    - useContext: creating and consuming context with TypeScript
    - useReducer: using reducers in TypeScript for state management
o Custom Hooks [Done]
    - Componentsreating reusable hooks with TypeScript
    - Best practices for typing custom hooks
o Forms and Input Handling [Done]
    - Building controlled components with TypeScript
    - Form libraries and how to type them
o Component Composition and Patterns [Done]
    - Higher-Order Components (HOC) and Render Props with TypeScript
    - Prop drilling vs context API
o Routing in React [Done]
    - Integrating React Router with TypeScript
    - Typing route parameters and navigation props

----------------------------------------------------------------------------------------------------
# Advanced Topics

o Advanced TypeScript Techniques [Done]
    - Generics in components and hooks
    - Utility types: Partial | Pick | Omit
    - Advanced type inference and conditional types in React patterns
o State Management Strategies [Done]
    - Integrating Redux with TypeScript
    - Using middleware and side effects in typed state management
o Performance Optimization [Done]
    - Memoization techniques with React.memo and useCallaback
    - Code splitting and lazy loading with Suspense
o Ecosystem Integration [Done]
    - Integrating with external libraries and ensuring proper TypeScript support
    - Using GraphQL with TypeScript in React applications    